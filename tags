!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
add_table_params	R/table_params.R	/^add_table_params <- function(d, params, fun, ...){$/;"	f
align_2	R/gtable_utils.R	/^align_2 <- function(x, y, along = 1L, join = "outer") {$/;"	f
aligned	R/gtable_utils.R	/^  aligned <- align_2(x, y, along = along, join = join)$/;"	v
assays	tests/testthat/testdata/DBS.R	/^assays <- SimpleList()$/;"	g
assays	tests/testthat/testdata/DEXP.R	/^assays <- SimpleList()$/;"	g
bg_fun	R/gtables.R	/^                         bg_fun = rect_grob, bg_params = list(),$/;"	v
bg_fun	R/test.R	/^#                   bg_fun = rect_grob, $/;"	v
bg_fun	R/test.R	/^#                bg_fun = rect_grob, $/;"	v
bg_fun	tests/testthat/test-gtable_utils.R	/^                     bg_fun = theme$colhead$bg_fun, $/;"	v
bg_fun	tests/testthat/test-gtable_utils.R	/^                     bg_fun = theme$core$bg_fun, $/;"	v
bg_fun	tests/testthat/test-gtable_utils.R	/^                     bg_fun = theme$rowhead$bg_fun, $/;"	v
bg_fun	tests/testthat/test-gtable_utils.R	/^                    bg_fun = theme$colhead$bg_fun, $/;"	v
bg_params	R/gtables.R	/^  bg_params <- tb_params[["bg_params"]]$/;"	v
bg_params	R/table_params.R	/^  bg_params <- lapply(bg_params, rep_ifshort, n = n, nc = nc, nr = nr)$/;"	v
bg_params	R/test.R	/^#                   bg_params = list(fill = c("grey80"), $/;"	v
bg_params	R/test.R	/^#                   bg_params = list(fill=NA, lwd=1.5, col="white"),$/;"	v
bg_params	R/test.R	/^#                bg_params = list(fill = c("grey95","grey90"), $/;"	v
bg_params	tests/testthat/test-gtable_utils.R	/^                     bg_params = theme$colhead$bg_params, $/;"	v
bg_params	tests/testthat/test-gtable_utils.R	/^                     bg_params = theme$core$bg_params, $/;"	v
bg_params	tests/testthat/test-gtable_utils.R	/^                     bg_params = theme$rowhead$bg_params, $/;"	v
bg_params	tests/testthat/test-gtable_utils.R	/^                    bg_params = theme$colhead$bg_params, $/;"	v
bkgds_grobs	R/gtables.R	/^  bkgds_grobs <- matrix(bkgds, ncol = nc, byrow = FALSE)$/;"	v
breaks	R/other_utils.R	/^    breaks <- (breaks-d_min)\/(d_max-d_min)$/;"	v
breaks_scale	R/other_utils.R	/^breaks_scale <- function(d, d_min=NULL, d_max=NULL, breaks=10){$/;"	f
cbind_2	R/gtable_utils.R	/^cbind_2 <- function(x, y, size = "max", width=NULL) {$/;"	f
circle_grob	R/vectorgrobs.R	/^circle_grob <- function(r=unit(5, "mm"),$/;"	f
col	R/test.R	/^# col <- matrix(list(a, b, c), ncol = 1)$/;"	v
col	R/vectorgrobs.R	/^                        col = "black", $/;"	v
col	R/vectorgrobs.R	/^                      col = "black", $/;"	v
col	R/vectorgrobs.R	/^                      col = "black",$/;"	v
col	tests/testthat/test-gtable_utils.R	/^  col <- t(colnames(d))$/;"	v
colData	tests/testthat/testdata/DBS.R	/^  colData = colData,$/;"	v
colData	tests/testthat/testdata/DBS.R	/^colData <- data.frame(name=cols, description=cols.desc, stringsAsFactors=F)$/;"	g
colData	tests/testthat/testdata/DEXP.R	/^  colData = colData,$/;"	v
colData	tests/testthat/testdata/DEXP.R	/^colData <- data.frame(name=cols, description=cols.desc, stringsAsFactors=F)$/;"	g
col_widths	R/other_utils.R	/^col_widths <- function(m){$/;"	f
colhead	R/test.R	/^#     colhead = colhead,$/;"	v
colhead	R/test.R	/^#   colhead <- list(fg_fun = text_grob, $/;"	v
colhead	R/theme_awesome.R	/^  colhead <- list(fg_fun=text_grob, $/;"	v
colmore	R/theme_awesome.R	/^  colmore <- list(fg_fun=text_grob, $/;"	v
colnames	R/gtable_utils.R	/^        colnames = missing)$/;"	v
color_breaks	tests/testthat/test-table_extra_grob.R	/^  color_breaks <- c(-2, 0, 2)$/;"	v
color_breaks	tests/testthat/test-table_extra_grob.R	/^  color_breaks <- c(0, 0.001,0.005,0.008,0.01,0.02,0.03,0.05,0.1,0.5,1)$/;"	v
color_breaks	tests/testthat/test-table_extra_grob.R	/^  color_breaks <- c(0, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 25, 1e6)$/;"	v
color_palette	tests/testthat/test-table_extra_grob.R	/^  color_palette <- c("#6e0d25", "#c6ca53")$/;"	v
color_palette	tests/testthat/test-table_extra_grob.R	/^  color_palette <- c("#ffc651", "#ffa759", "#ff8962", "#ff6b6b", "#cc6999", "#9968c8", "#6767f8", "#4459ce", "#224ba5", $/;"	v
cols	R/test.R	/^#   cols = colnames(DBS)$/;"	v
cols	tests/testthat/testdata/DBS.R	/^cols <- c("Biliary-AdenoCA", "Bladder-TCC", "Bone-Osteosarc", "Bone-Other", "Breast", "Cervix", "CNS-GBM", $/;"	g
cols	tests/testthat/testdata/DEXP.R	/^cols <- c("Biliary-AdenoCA", "Bladder-TCC", "Bone-Osteosarc", "Bone-Other", "Breast", "Cervix", "CNS-GBM", $/;"	g
cols.desc	tests/testthat/testdata/DBS.R	/^cols.desc <- c(8, 10, 0, 0, 18, 0, 2, 0, 0, 0, 13, 1)$/;"	g
cols.desc	tests/testthat/testdata/DEXP.R	/^cols.desc <- c(8, 10, 0, 0, 18, 0, 2, 0, 0, 0, 13, 1)$/;"	g
cols_more	tests/testthat/test-table_extra_grob.R	/^  cols_more <- list("n="=SummarizedExperiment::colData(DBS)$description)$/;"	v
cols_more	tests/testthat/test-table_extra_grob.R	/^  cols_more <- list("n="=dscale$n)$/;"	v
combine	R/gtable_utils.R	/^combine <- function (..., along = 1L, join = "outer") {$/;"	f
combine_2	R/gtable_utils.R	/^combine_2 <- function(x, y, along = 1L, join = "outer") {$/;"	f
core	R/test.R	/^#   core <- list(fg_fun = text_grob, $/;"	v
core	R/theme_awesome.R	/^  core <- list(fg_fun=circle_grob, $/;"	v
core_size_value	R/theme_awesome.R	/^  core_size_value <- as.numeric(core_size)$/;"	v
d	R/gtables.R	/^  d <- as.matrix(d)$/;"	v
d	R/table_params.R	/^        d <- as.matrix(color_palette, nrow=nrow(d), ncol=ncol(d))$/;"	v
d	R/table_params.R	/^  d <- as.vector(d)$/;"	v
d	R/table_params.R	/^  d <- breaks_scale(d=d, d_min=d_min, d_max=d_max, breaks=scale_breaks)$/;"	v
d	R/test.R	/^#   d = assays(DBS)$proportion,$/;"	v
d	tests/testthat/test-gtable_utils.R	/^  d <- matrix(rep(d, 5), nrow=5, byrow=T)$/;"	v
d	tests/testthat/test-gtable_utils.R	/^  d <- t(SummarizedExperiment::colData(DBS)$description)$/;"	v
d	tests/testthat/test-gtables.R	/^  d <- matrix(rep(d, 5), nrow=5, byrow=T)$/;"	v
d	tests/testthat/test-gtables.R	/^  d <- t(SummarizedExperiment::colData(DBS)$description)$/;"	v
data	tests/testthat/testdata/DBS.R	/^data <- matrix(c(rep(0., 12),$/;"	g
data	tests/testthat/testdata/DEXP.R	/^data <- matrix(runif(length(rows)*length(cols), min=0, max=1), nrow=length(rows))$/;"	g
data	tests/testthat/testdata/DEXP.R	/^data <- matrix(sample(c(-1,1), size=length(rows)*length(cols), replace=T), nrow=length(rows))$/;"	g
dcolor	tests/testthat/test-table_extra_grob.R	/^  dcolor <- column_to_rownames(.data=dcolor, var="Cancer.Types")$/;"	v
dcolor	tests/testthat/test-table_extra_grob.R	/^  dcolor <- pcawg_counts %>%$/;"	v
dcolor	tests/testthat/test-table_extra_grob.R	/^  dcolor <- t(as.matrix(dcolor))$/;"	v
dcut	R/other_utils.R	/^  dcut <- dcut\/max(dcut)$/;"	v
dcut	R/other_utils.R	/^  dcut <- matrix(dint, nrow=nrow(d), byrow=F)$/;"	v
default.units	R/vectorgrobs.R	/^             default.units = default.units,$/;"	v
default.units	R/vectorgrobs.R	/^           default.units = default.units,$/;"	v
dint	R/other_utils.R	/^  dint <- (breaks[dint] + breaks[dint+1])\/2$/;"	v
dscale	tests/testthat/test-table_extra_grob.R	/^  dscale <- -log10(SummarizedExperiment::assays(DEXP)$pvalue) + 1$/;"	v
dscale	tests/testthat/test-table_extra_grob.R	/^  dscale <- column_to_rownames(.data=dscale, var="Cancer.Types")$/;"	v
dscale	tests/testthat/test-table_extra_grob.R	/^  dscale <- pcawg_counts %>%$/;"	v
dscale	tests/testthat/test-table_extra_grob.R	/^  dscale <- t(as.matrix(dscale))$/;"	v
each	R/gtables.R	/^                       l=rep(seq_len(nc), each = nr), z=0, $/;"	v
error	R/vectorgrobs.R	/^                      error = function(e) label)$/;"	f
extra_params	R/table_params.R	/^    extra_params <- table_params_circle(d, ...)$/;"	v
extra_params	R/table_params.R	/^    extra_params <- table_params_text(d)$/;"	v
fg_fun	R/gtables.R	/^                         fg_fun = text_grob, fg_params = list(),$/;"	v
fg_fun	tests/testthat/test-gtable_utils.R	/^                     fg_fun = theme$colhead$fg_fun, $/;"	v
fg_fun	tests/testthat/test-gtable_utils.R	/^                     fg_fun = theme$core$fg_fun, $/;"	v
fg_fun	tests/testthat/test-gtable_utils.R	/^                     fg_fun = theme$rowhead$fg_fun, $/;"	v
fg_fun	tests/testthat/test-gtable_utils.R	/^                    fg_fun = theme$colhead$fg_fun, $/;"	v
fg_params	R/gtables.R	/^  fg_params <- tb_params[["fg_params"]]$/;"	v
fg_params	R/table_params.R	/^  fg_params <- lapply(fg_params, rep_ifshort, n = n, nc = nc, nr = nr)$/;"	v
fg_params	R/test.R	/^#                   fg_params = list(parse=parse, col=base_colour,$/;"	v
fg_params	R/test.R	/^#                fg_params = list(parse=parse, col=base_colour,$/;"	v
fg_params	tests/testthat/test-gtable_utils.R	/^                     fg_params = theme$colhead$fg_params, $/;"	v
fg_params	tests/testthat/test-gtable_utils.R	/^                     fg_params = theme$core$fg_params, $/;"	v
fg_params	tests/testthat/test-gtable_utils.R	/^                     fg_params = theme$rowhead$fg_params, $/;"	v
fg_params	tests/testthat/test-gtable_utils.R	/^                    fg_params = theme$colhead$fg_params, $/;"	v
fill	R/vectorgrobs.R	/^                        fill = "black", $/;"	v
first	R/gtable_utils.R	/^                      first = x$heights,$/;"	v
first	R/gtable_utils.R	/^                     first = x$widths,$/;"	v
fixed	R/gtable_utils.R	/^                               fixed = FALSE, trim=TRUE){$/;"	v
fontfamily	R/test.R	/^#                                    fontfamily = base_family),$/;"	v
fontfamily	R/test.R	/^#                                    fontfamily = base_family,$/;"	v
fontfamily	R/test.R	/^#                                 fontfamily = base_family),$/;"	v
fontsize	R/test.R	/^#                                    fontsize = base_size,$/;"	v
fontsize	R/test.R	/^#                                 fontsize = base_size,$/;"	v
frgds_grobs	R/gtables.R	/^  frgds_grobs <- matrix(frgds, ncol = nc, byrow = FALSE)$/;"	v
g	R/gtables.R	/^  g <- gtable_add_col_space(g, padding[1])$/;"	v
g	R/gtables.R	/^  g <- gtable_add_grob(g, bkgds_grobs, $/;"	v
g	R/gtables.R	/^  g <- gtable_add_row_space(g, padding[2])$/;"	v
g	R/gtables.R	/^  g <- gtable_matrix(paste0(name, "-fg"), $/;"	v
g	R/table_extra_grob.R	/^        g <- cbind_2(g, gr, "max", width=theme$rowmore$padding[2])$/;"	v
g	R/table_extra_grob.R	/^        g <- rbind_2(gc, g, "max", height=theme$colmore$padding[1])$/;"	v
g	R/table_extra_grob.R	/^    g <- cbind_2(gr, g, "max", width=theme$rowhead$padding[2])$/;"	v
g	R/table_extra_grob.R	/^    g <- rbind_2(gc, g, "max", height=theme$colhead$padding[1])$/;"	v
g	R/table_extra_grob.R	/^  g <- gtable_table(dscale, name="circle",$/;"	v
g	tests/testthat/test-gtable_utils.R	/^  g <- cbind_2(g1, g2, "max", width=theme$core$padding[2])$/;"	v
g	tests/testthat/test-gtable_utils.R	/^  g <- rbind_2(g1, g2, "max", height=theme$core$padding[1])$/;"	v
g	tests/testthat/test-gtable_utils.R	/^  g <- rbind_2(g1, g2, size="first", height=theme$rowhead$padding[1])$/;"	v
g	tests/testthat/test-gtable_utils.R	/^  g <- rbind_2(g1, g2, size="last", height=theme$core$padding[1])$/;"	v
g	tests/testthat/test-gtables.R	/^  g <- gtable_table(d, name="circle",$/;"	v
g	tests/testthat/test-table_extra_grob.R	/^  g <- table_extra_grob(d, rows=rownames(d), cols=colnames(d),$/;"	v
g	tests/testthat/test-table_extra_grob.R	/^  g <- table_extra_grob(dscale=dscale, dcolor=dcolor, $/;"	v
g	tests/testthat/test-vectorgrobs.R	/^  g <- grid::gTree(children=grid::gList(gr, gc))$/;"	v
g	tests/testthat/test-vectorgrobs.R	/^  g <- rect_grob(width=unit(10, "mm"),$/;"	v
g	tests/testthat/test-vectorgrobs.R	/^  g <- rect_grob(x=unit(0.5, "mm"),$/;"	v
g	tests/testthat/test-vectorgrobs.R	/^  g <- text_grob(label="test",$/;"	v
g1	tests/testthat/test-gtable_utils.R	/^  g1 <- gtable_table(col, name="colhead-1",$/;"	v
g1	tests/testthat/test-gtable_utils.R	/^  g1 <- gtable_table(d, name="circle",$/;"	v
g1	tests/testthat/test-gtable_utils.R	/^  g1 <- gtable_table(d, name="colhead-1",$/;"	v
g1	tests/testthat/test-gtable_utils.R	/^  g1 <- gtable_table(d, name="rowhead-1",$/;"	v
g2	tests/testthat/test-gtable_utils.R	/^  g2 <- gtable_table(d, name="circle",$/;"	v
g2	tests/testthat/test-gtable_utils.R	/^  g2 <- gtable_table(d, name="colhead-2",$/;"	v
g2	tests/testthat/test-gtable_utils.R	/^  g2 <- gtable_table(d, name="rowhead-2",$/;"	v
gc	R/table_extra_grob.R	/^        gc <- gtable_table(t(cols_m), name="colmore",$/;"	v
gc	R/table_extra_grob.R	/^    gc <- gtable_table(t(cols), name="colhead",$/;"	v
gc	tests/testthat/test-gtables.R	/^  gc <- gtable_table(d, name="colhead",$/;"	v
gr	R/table_extra_grob.R	/^        gr <- gtable_table(rows_m, name="rowmore",$/;"	v
gr	R/table_extra_grob.R	/^    gr <- gtable_table(rows, name="rowhead",$/;"	v
gr	tests/testthat/test-gtables.R	/^  gr <- gtable_table(d, name="rowhead",$/;"	v
gr	tests/testthat/test-vectorgrobs.R	/^  gr <- rect_grob(width=unit(10,"mm"),$/;"	v
gtable_cbind	R/gtable_utils.R	/^gtable_cbind <- function(..., size = "max", z = NULL) {$/;"	f
gtable_combine	R/gtable_utils.R	/^gtable_combine <- function (..., along = 1L, join = "outer") $/;"	f
gtable_rbind	R/gtable_utils.R	/^gtable_rbind <- function(..., size = "max", z = NULL) {$/;"	f
gtable_reindex	R/gtable_utils.R	/^gtable_reindex <- function(x, index, along = 1L) {$/;"	f
gtable_remove_grob	R/gtable_utils.R	/^gtable_remove_grob <- function(x, pattern, which = 1L, $/;"	f
gtable_table	R/gtables.R	/^gtable_table <- function(d, widths, heights,$/;"	f
gtables	R/gtable_utils.R	/^    gtables <- z_arrange_gtables(gtables, z)$/;"	v
gtables	R/gtable_utils.R	/^  gtables <- list(...)$/;"	v
height	R/vectorgrobs.R	/^                      height = unit(100, "mm"),  $/;"	v
heights	R/gtable_utils.R	/^        heights = unit(rep(0, nrow(x)), "cm"), $/;"	v
heights	R/gtables.R	/^                     heights = heights, vp=vp)$/;"	v
heights	R/gtables.R	/^    heights <- row_heights(frgds_grobs)$/;"	v
heights	R/test.R	/^#     lo <- graphics::layout(mat = mat.lo, heights = c(2, 12, ann.height, leg.height))$/;"	v
heights	tests/testthat/test-gtables.R	/^  heights <- unit(4, "mm")$/;"	v
hjust	R/test.R	/^#                                    hjust = 1, x = 0.95),$/;"	v
idx	R/gtable_utils.R	/^  idx <- switch(join,$/;"	v
inner	R/gtable_utils.R	/^                inner = intersect(names_x, names_y),$/;"	v
insert.unit	R/gtable_utils.R	/^insert.unit <- function (x, values, after = length(x)) {$/;"	f
join	R/gtable_utils.R	/^align_2 <- function(x, y, along = 1L, join = "outer") {$/;"	v
join	R/gtable_utils.R	/^combine <- function (..., along = 1L, join = "outer") {$/;"	v
join	R/gtable_utils.R	/^combine_2 <- function(x, y, along = 1L, join = "outer") {$/;"	v
join	R/gtable_utils.R	/^gtable_combine <- function (..., along = 1L, join = "outer") $/;"	v
label	R/vectorgrobs.R	/^    label <- tryCatch(parse(text=label), $/;"	v
last	R/gtable_utils.R	/^                      last = y$heights,$/;"	v
last	R/gtable_utils.R	/^                     last = y$widths,$/;"	v
layout.matrix	R/test.R	/^# layout.matrix <- matrix(data = c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE)$/;"	v
left	R/gtable_utils.R	/^                left = names_x,$/;"	v
lineend	R/vectorgrobs.R	/^                        lineend = "round", $/;"	v
lineend	R/vectorgrobs.R	/^                      lineend = "round", $/;"	v
linejoin	R/vectorgrobs.R	/^                        linejoin = "round", $/;"	v
linejoin	R/vectorgrobs.R	/^                      linejoin = "round", $/;"	v
lty	R/vectorgrobs.R	/^                        lty = "solid", $/;"	v
lty	R/vectorgrobs.R	/^                      lty = "solid", $/;"	v
mat	R/test.R	/^# mat <- matrix(list(a, b, c, nullGrob()), nrow = 2)$/;"	v
mat.lo	R/test.R	/^#     mat.lo <- matrix(data = c(1,2,3), nrow = 3, ncol = 1, byrow = TRUE)$/;"	v
mat.lo	R/test.R	/^#     mat.lo <- matrix(data = c(1,2,3,4), nrow = 4, ncol = 1, byrow = TRUE)$/;"	v
mat.lo	R/test.R	/^#     mat.lo <- matrix(data = c(1,2,3,4,5,5), nrow = 3, ncol = 2, byrow = TRUE)$/;"	v
mat.lo	R/test.R	/^#     mat.lo <- matrix(data = c(1,2,3,4,5,6,7,7), nrow = 4, ncol = 2, byrow = TRUE)$/;"	v
matches	R/gtable_utils.R	/^  matches <- grep(pattern, x$layout$name, fixed = fixed)$/;"	v
max	R/gtable_utils.R	/^                      max = unit.pmax(x$heights, y$heights))$/;"	v
max	R/gtable_utils.R	/^                     max = unit.pmax(x$widths, y$widths)$/;"	v
median	tests/testthat/testdata/DBS.R	/^                 "median" = "median mutations per Mb due to the signature")$/;"	v
metadata	tests/testthat/testdata/DBS.R	/^  metadata = metadata$/;"	v
metadata	tests/testthat/testdata/DBS.R	/^metadata <- list("proportion" = "Proportion of tumors with the signature",$/;"	g
metadata	tests/testthat/testdata/DEXP.R	/^  metadata = metadata$/;"	v
metadata	tests/testthat/testdata/DEXP.R	/^metadata <- list("pvalue" = "adjusted pvalue multiple testing",$/;"	g
min	R/gtable_utils.R	/^                      min = unit.pmin(x$heights, y$heights),$/;"	v
min	R/gtable_utils.R	/^                     min = unit.pmin(x$widths, y$widths),$/;"	v
missing	R/gtable_utils.R	/^    missing <- setdiff(index, old_index)$/;"	v
name	R/gtables.R	/^                         name = "table", vp = NULL, ...){$/;"	v
name	R/vectorgrobs.R	/^             name = name, vp = vp,$/;"	v
name	R/vectorgrobs.R	/^           name = name, vp = vp,$/;"	v
names_x	R/gtable_utils.R	/^  names_x <- dimnames(x)[[along]]$/;"	v
names_y	R/gtable_utils.R	/^  names_y <- dimnames(y)[[along]]$/;"	v
old_index	R/gtable_utils.R	/^  old_index <- switch(along, rownames(x), colnames(x))$/;"	v
out	tests/testthat/test-gtable_utils.R	/^  out <- plot_grob(g, name="gtable_circle_cbind.pdf", width=10, height=6)$/;"	v
out	tests/testthat/test-gtable_utils.R	/^  out <- plot_grob(g, name="gtable_rbind_2_text_circle.pdf")$/;"	v
out	tests/testthat/test-gtable_utils.R	/^  out <- plot_grob(g, name="gtable_rbind_2_text_mat.pdf", width=4, height=3)$/;"	v
out	tests/testthat/test-gtable_utils.R	/^  out <- plot_grob(g, name="gtable_rbind_2_text_row.pdf", width=4, height=1)$/;"	v
out	tests/testthat/test-gtables.R	/^  out <- plot_grob(g, name="gtable_circle.pdf")$/;"	v
out	tests/testthat/test-gtables.R	/^  out <- plot_grob(gc, name="gtable_text_row_no_padding.pdf", width=8, height=1)$/;"	v
out	tests/testthat/test-gtables.R	/^  out <- plot_grob(gc, name="gtable_text_row_with_padding.pdf", width=8, height=1)$/;"	v
out	tests/testthat/test-gtables.R	/^  out <- plot_grob(gr, name="gtable_text_col.pdf", width=1, height=4.5)$/;"	v
out	tests/testthat/test-gtables.R	/^  out <- plot_grob(gr, name="gtable_text_mat_no_padding.pdf")$/;"	v
out	tests/testthat/test-gtables.R	/^  out <- plot_grob(gr, name="gtable_text_mat_with_padding.pdf")$/;"	v
out	tests/testthat/test-table_extra_grob.R	/^  out <- plot_grob(g, name="table_extra_grob.pdf", width=4, height=4)$/;"	v
out	tests/testthat/test-table_extra_grob.R	/^  out <- plot_grob(g, name="table_extra_grob_cols_more.pdf", width=4, height=4)$/;"	v
out	tests/testthat/test-table_extra_grob.R	/^  out <- plot_grob(g, name="table_extra_grob_cols_more_rows_more_no_color.pdf", width=5, height=4)$/;"	v
out	tests/testthat/test-table_extra_grob.R	/^  out <- plot_grob(g, name="table_extra_grob_cols_more_rows_more_with_color.pdf", width=5, height=4)$/;"	v
out	tests/testthat/test-table_extra_grob.R	/^  out <- plot_grob(g, name="table_extra_grob_genes.pdf", width=5, height=12)$/;"	v
out	tests/testthat/test-table_extra_grob.R	/^  out <- plot_grob(g, name="table_extra_grob_genes_dmin_dmax.pdf", width=5, height=12)$/;"	v
out	tests/testthat/test-table_extra_grob.R	/^  out <- plot_grob(g, name="table_extra_grob_genes_dmin_dmax_with_scale_breaks.pdf", width=5, height=12)$/;"	v
out	tests/testthat/test-table_extra_grob.R	/^  out <- plot_grob(g, name="table_extra_grob_pcawg.pdf", width=12, height=16)$/;"	v
out	tests/testthat/test-vectorgrobs.R	/^  out <- plot_grob(g, name="circle_grob.pdf", width=1, height=1)$/;"	v
out	tests/testthat/test-vectorgrobs.R	/^  out <- plot_grob(g, name="rect_circle_grob.pdf", width=1, height=1)$/;"	v
out	tests/testthat/test-vectorgrobs.R	/^  out <- plot_grob(g, name="rect_circle_grob_small.pdf", width=4, height=4)$/;"	v
out	tests/testthat/test-vectorgrobs.R	/^  out <- plot_grob(g, name="rect_grob.pdf", width=1, height=1)$/;"	v
out	tests/testthat/test-vectorgrobs.R	/^  out <- plot_grob(g, name="rect_grob_xy.pdf", width=1, height=1)$/;"	v
out	tests/testthat/test-vectorgrobs.R	/^  out <- plot_grob(g, name="text_grob.pdf", width=1, height=1)$/;"	v
outer	R/gtable_utils.R	/^                outer = union(names_x, names_y)$/;"	v
padding	R/gtables.R	/^                         padding = unit(c(4, 4), "mm"),$/;"	v
padding	R/test.R	/^#                            padding = unit(c(4, 4), "mm"), ...){$/;"	v
padding	R/test.R	/^#                   padding = padding)$/;"	v
padding	R/test.R	/^#                padding = padding)$/;"	v
params	R/table_params.R	/^    params <- c(params_scale, params_color)$/;"	v
params	R/table_params.R	/^    params <- list(fill=as.vector(d))$/;"	v
params	R/table_params.R	/^    params <- params_scale$/;"	v
params	R/table_params.R	/^  params <- list(label=d)$/;"	v
params	R/table_params.R	/^  params <- list(r=do.call(unit.c, lapply(d, r_func)))$/;"	v
params_color	R/table_params.R	/^    params_color <- table_params_circle_color(d=dcolor, color_palette=color_palette, color_breaks=color_breaks)$/;"	v
params_scale	R/table_params.R	/^  params_scale <- table_params_circle_scale(d=dscale, scale_breaks=scale_breaks, r_min=r_min, r_max=r_max, $/;"	v
plot_grob	tests/testthat/helper.R	/^plot_grob <- function(g, name, width=NULL, height=NULL){$/;"	f
r_func	R/table_params.R	/^  r_func <- function(x){$/;"	f
rbind_2	R/gtable_utils.R	/^rbind_2 <- function(x, y, size = "max", height=NULL) {$/;"	f
rect_grob	R/vectorgrobs.R	/^rect_grob <- function(fill = "white", $/;"	f
rep_along	R/other_utils.R	/^rep_along <- function(x, y) {$/;"	f
rep_ifshort	R/other_utils.R	/^rep_ifshort <- function(x, n, nc, nr){$/;"	f
right	R/gtable_utils.R	/^                right = names_y, $/;"	v
rot	R/vectorgrobs.R	/^           rot = rot, check.overlap = check.overlap, $/;"	v
row	R/test.R	/^# row <- matrix(list(a, b, c), nrow = 1)$/;"	v
rowData	tests/testthat/testdata/DBS.R	/^  rowData = rowData,$/;"	v
rowData	tests/testthat/testdata/DBS.R	/^rowData <- data.frame(name=rows, description=rows.desc, stringsAsFactors=F)$/;"	g
rowData	tests/testthat/testdata/DEXP.R	/^  rowData = rowData,$/;"	v
rowData	tests/testthat/testdata/DEXP.R	/^rowData <- data.frame(name=rows, stringsAsFactors=F)$/;"	g
row_heights	R/other_utils.R	/^row_heights <- function(m){$/;"	f
rowhead	R/test.R	/^#   rowhead <- list(fg_fun = text_grob, $/;"	v
rowhead	R/theme_awesome.R	/^  rowhead <- list(fg_fun=text_grob, $/;"	v
rowmore	R/theme_awesome.R	/^  rowmore <- list(fg_fun=text_grob, $/;"	v
rownames	R/gtable_utils.R	/^        rownames = missing)$/;"	v
rows	R/table_extra_grob.R	/^        rows <- c("", names(cols_more), rows)$/;"	v
rows	R/table_extra_grob.R	/^        rows <- c("", rows)$/;"	v
rows	R/test.R	/^#   rows = rownames(DBS),$/;"	v
rows	tests/testthat/testdata/DBS.R	/^rows <- sapply(1:11, function(i) paste0("DBS",i))$/;"	g
rows	tests/testthat/testdata/DEXP.R	/^rows <- sapply(1:50, function(i) paste0("ENSG00000",i))$/;"	g
rows.desc	tests/testthat/testdata/DBS.R	/^rows.desc <- c("Ultraviolet light exposure", "Tobacco Smokin and other", "POLE mutation", "", "Platinum treatment", "",$/;"	g
rows_m	R/table_extra_grob.R	/^            rows_m <- c("", names(rows_more), rows_more[[rows_m_name]])$/;"	v
rows_m	R/table_extra_grob.R	/^            rows_m <- c("", rows_more[[rows_m_name]])$/;"	v
rows_more	tests/testthat/test-table_extra_grob.R	/^  rows_more <- list("Proposed aetiology"=SummarizedExperiment::rowData(DBS)$description)$/;"	v
scale_breaks	tests/testthat/test-table_extra_grob.R	/^  scale_breaks <- c(1, 2, 5)$/;"	v
size	R/gtable_utils.R	/^  Reduce(function(x, y) cbind_2(x, y, size = size), gtables)$/;"	v
size	R/gtable_utils.R	/^  Reduce(function(x, y) rbind_2(x, y, size = size), gtables)$/;"	v
size	R/gtable_utils.R	/^cbind_2 <- function(x, y, size = "max", width=NULL) {$/;"	v
size	R/gtable_utils.R	/^gtable_cbind <- function(..., size = "max", z = NULL) {$/;"	v
size	R/gtable_utils.R	/^gtable_rbind <- function(..., size = "max", z = NULL) {$/;"	v
size	R/gtable_utils.R	/^rbind_2 <- function(x, y, size = "max", height=NULL) {$/;"	v
table_extra_grob	R/table_extra_grob.R	/^table_extra_grob <- function(dscale, dcolor=NULL,$/;"	f
table_params	R/table_params.R	/^table_params <- function(d, fg_params, bg_params){$/;"	f
table_params_circle	R/table_params.R	/^table_params_circle <- function(dscale, dcolor, scale_breaks, r_min, r_max,  color_palette, color_breaks, $/;"	f
table_params_circle_color	R/table_params.R	/^table_params_circle_color <- function(d, color_palette, color_breaks=NULL){$/;"	f
table_params_circle_scale	R/table_params.R	/^table_params_circle_scale <- function(d, scale_breaks=10, r_min=unit(4, "mm"), r_max=unit(10, "mm"), d_min=NULL, $/;"	f
table_params_text	R/table_params.R	/^table_params_text <- function(d){$/;"	f
tb_params	R/gtables.R	/^  tb_params <- table_params(d, fg_params, bg_params)$/;"	v
text_grob	R/vectorgrobs.R	/^text_grob <- function(label, $/;"	f
theme	tests/testthat/test-gtable_utils.R	/^  theme <- ttheme_awesome()$/;"	v
theme	tests/testthat/test-gtables.R	/^  theme <- ttheme_awesome()$/;"	v
theme	tests/testthat/test-gtables.R	/^  theme <- ttheme_awesome(padding=unit(c(0,0), "mm"))$/;"	v
theme	tests/testthat/test-gtables.R	/^  theme <- ttheme_awesome(padding=unit(c(1,1), "mm"))$/;"	v
theme	tests/testthat/test-gtables.R	/^  theme <- ttheme_awesome(padding=unit(c(2,0), "mm"))$/;"	v
theme	tests/testthat/test-table_extra_grob.R	/^  theme <- ttheme_awesome(base_size=12,$/;"	v
theme	tests/testthat/test-table_extra_grob.R	/^  theme <- ttheme_awesome(core_size=unit(5, "mm"))$/;"	v
theme	tests/testthat/test-table_extra_grob.R	/^  theme <- ttheme_awesome(core_size=unit(5, "mm"), $/;"	v
theme	tests/testthat/test-table_extra_grob.R	/^  theme <- ttheme_awesome(core_size=unit(5, "mm"), color_palette=color_palette, color_breaks=color_breaks)$/;"	v
ties.method	R/gtable_utils.R	/^  x$layout$z <- rank(x$layout$z, ties.method = "first") + i - $/;"	v
tokeep	R/gtable_utils.R	/^  tokeep <- setdiff(seq_len(length(x)), matches[which])$/;"	v
ttheme_awesome	R/theme_awesome.R	/^ttheme_awesome <- function(base_size=8, $/;"	f
width	R/vectorgrobs.R	/^                      width = unit(100, "mm"), $/;"	v
widths	R/gtable_utils.R	/^        widths = unit(rep(0, ncol(x)), "cm"), $/;"	v
widths	R/gtables.R	/^                     widths = widths, $/;"	v
widths	R/test.R	/^#     lo <- graphics::layout(mat = mat.lo, heights = c(12, ann.height, leg.height), widths = c(6, 1))$/;"	v
widths	R/test.R	/^#     lo <- graphics::layout(mat = mat.lo, widths = c(6, 1), heights = c(2, 12, 1, leg.height))$/;"	v
x	R/gtable_utils.R	/^      x <- cbind(x, spacer, size = "first")$/;"	v
x	R/gtable_utils.R	/^      x <- rbind(x, spacer, size = "first")$/;"	v
x	R/gtable_utils.R	/^    x <- gtable::gtable_add_cols(x, width)$/;"	v
x	R/gtable_utils.R	/^    x <- gtable::gtable_add_rows(x, height)$/;"	v
x	R/gtable_utils.R	/^    x <- gtable_trim(x)$/;"	v
x	R/gtable_utils.R	/^    x = gtable_reindex(x, idx, along), $/;"	v
x	R/vectorgrobs.R	/^                        x = unit(0.5, "npc"), $/;"	v
x	R/vectorgrobs.R	/^                      x = unit(0.5, "npc"), $/;"	v
x	R/vectorgrobs.R	/^  textGrob(label = label, x = x, y = y, $/;"	v
y	R/gtable_utils.R	/^    y = gtable_reindex(y, idx, along)$/;"	v
y	R/vectorgrobs.R	/^                        y = unit(0.5, "npc"),$/;"	v
y	R/vectorgrobs.R	/^                      y = unit(0.5, "npc"),$/;"	v
z	R/test.R	/^# z <- matrix(c(3, 1, 2, 4), nrow = 2)$/;"	v
z_arrange_gtables	R/gtable_utils.R	/^z_arrange_gtables <- function (gtables, z) $/;"	f
z_normalise	R/gtable_utils.R	/^z_normalise <- function (x, i = 1) $/;"	f
zmax	R/gtable_utils.R	/^      zmax <- max(gtables[[i]]$layout$z)$/;"	v
